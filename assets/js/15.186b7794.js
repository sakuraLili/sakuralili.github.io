(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{383:function(s,t,a){s.exports=a.p+"assets/img/13.fe27b392.png"},384:function(s,t,a){s.exports=a.p+"assets/img/05.be07a954.png"},385:function(s,t,a){s.exports=a.p+"assets/img/04.7c71bb9f.png"},386:function(s,t,a){s.exports=a.p+"assets/img/07.9745243d.png"},387:function(s,t,a){s.exports=a.p+"assets/img/09.e3d2970e.png"},388:function(s,t,a){s.exports=a.p+"assets/img/11.327b1be6.png"},532:function(s,t,a){"use strict";a.r(t);var e=a(5),r=Object(e.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("p",[s._v("很多时候，系统管理员都习惯通过 SSH 服务来远程登录管理服务器，但是 Docker 的很多镜像都不带 SSH 服务的，所以需要我们自己自定义镜像来添加 SSH 服务，可以通过下面的方法添加 SSH 服务：")]),s._v(" "),t("ul",[t("li",[s._v("基于 commit 命令创建")]),s._v(" "),t("li",[s._v("基于 Dockerfile 创建")])]),s._v(" "),t("h2",{attrs:{id:"一、基于-commit-命令创建"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#一、基于-commit-命令创建"}},[s._v("#")]),s._v(" 一、基于 commit 命令创建")]),s._v(" "),t("p",[s._v("Docker 提供了 commit 命令，支持用户提交自己对容器的修改，并生成新的镜像。命令格式为：")]),s._v(" "),t("blockquote",[t("p",[s._v("docker commit CONTAINER [REPOSITORY[:TAG]]")])]),s._v(" "),t("h3",{attrs:{id:"_1-创建-ubuntu-容器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-创建-ubuntu-容器"}},[s._v("#")]),s._v(" 1. 创建 Ubuntu 容器")]),s._v(" "),t("p",[s._v("首先，获取 ubuntu:18.04镜像，然后创建一个容器，并在其中运行 bash 应用：")]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" pull ubuntu:18.04\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" run "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-it")]),s._v(" ubuntu:18.04 "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("bash")]),s._v("\n")])])]),t("h3",{attrs:{id:"_2-检查软件源"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-检查软件源"}},[s._v("#")]),s._v(" 2. 检查软件源")]),s._v(" "),t("p",[s._v("第二步，检查软件源，并使用 apt-get update 命令来更新软件源信息：")]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("apt-get")]),s._v(" update\n")])])]),t("p",[s._v("执行这个命令还是十分有必要的")]),s._v(" "),t("p",[s._v("如果没有执行这个命令，后面 install 一些工具时，可能会报错，说找不到 package：")]),s._v(" "),t("p",[t("img",{attrs:{src:a(383),alt:"image from dependency"}})]),s._v(" "),t("p",[s._v("这都是因为没有执行 apt-get update命令，执行后就可以 install 了")]),s._v(" "),t("h3",{attrs:{id:"_3-安装和配置-ssh-服务"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-安装和配置-ssh-服务"}},[s._v("#")]),s._v(" 3. 安装和配置 SSH 服务")]),s._v(" "),t("p",[s._v("第三步，安装和配置 SSH 服务。")]),s._v(" "),t("p",[s._v("选择 openssh-server 作为服务端：")]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("apt-get")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" openssh-server\n")])])]),t("p",[s._v("如果需要正常启动 SSH 服务，目录 /var/run/sshd 必须存在，这里需要手动创建它，并启动 SSH 服务：")]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-p")]),s._v(" /var/run/sshd\n/usr/sbin/sshd "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-D")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("\n")])])]),t("p",[s._v("此时，用下面的命令查看容器的22端口(SSH服务默认监听的端口)，可以发现22端口已经处于监听状态。")]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("netstat")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-tunlp")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("22")]),s._v("\n")])])]),t("p",[s._v("结果如图：")]),s._v(" "),t("p",[t("img",{attrs:{src:a(384),alt:"image from dependency"}})]),s._v(" "),t("p",[s._v("这时可能会报错：")]),s._v(" "),t("p",[t("img",{attrs:{src:a(385),alt:"image from dependency"}})]),s._v(" "),t("p",[s._v("这是由于网络工具没有安装，执行下面的命令就可以了：")]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("apt-get")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" net-tools\n")])])]),t("p",[s._v("修改 SSH 服务的安全登录配置，取消 pam 登录限制：")]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-ri")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/session required pam_loginuid.so/#session required pam_loginuid.so/g'")]),s._v(" /etc/pam.d/sshd\n")])])]),t("p",[s._v("在 root 用户目录下创建 .ssh 目录，并复制需要登录的公钥信息(一般为本地主机用户目录下的"),t("code",[s._v(".ssh/id_rsa.pub")]),s._v("文件)到authorized_keys文件中：")]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" root/.ssh\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("vi")]),s._v(" /root/.ssh/authorized_keys\n")])])]),t("p",[s._v("这里同样可能会报错，说vi: command not found，执行install 命令就可以了：")]),s._v(" "),t("p",[t("img",{attrs:{src:a(386),alt:"image from dependency"}})]),s._v(" "),t("p",[s._v("创建自动启动 SSH 服务的可执行文件 run.sh，并添加可执行权限：")]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("vi")]),s._v(" /run.sh\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("chmod")]),s._v(" +x run.sh\n")])])]),t("p",[s._v("run.sh 脚本内容如下：")]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token shebang important"}},[s._v("#!/bin/bash")]),s._v("\n/usr/sbin/sshd "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-D")]),s._v("\n")])])]),t("p",[s._v("最后，输入exit，退出容器")]),s._v(" "),t("h3",{attrs:{id:"_4-保存镜像"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-保存镜像"}},[s._v("#")]),s._v(" 4. 保存镜像")]),s._v(" "),t("p",[s._v("首先，使用 docker ps -a 命令查看容器：")]),s._v(" "),t("p",[t("img",{attrs:{src:a(387),alt:"image from dependency"}})]),s._v(" "),t("p",[s._v("这里可以看到"),t("strong",[s._v("容器的ID")])]),s._v(" "),t("p",[s._v("然后用 docker commit 命令将容器保存为一个新的 sshd:ubuntu 镜像")]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" commit 36f9aa524dd4 sshd:ubuntu\n")])])]),t("p",[s._v("创建成功后，我们可以用 docker images 命令查看一下镜像:")]),s._v(" "),t("p",[t("img",{attrs:{src:a(388),alt:"image from dependency"}})]),s._v(" "),t("h3",{attrs:{id:"_5-使用镜像"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-使用镜像"}},[s._v("#")]),s._v(" 5. 使用镜像")]),s._v(" "),t("p",[s._v("启动容器，并添加端口映射 10022 -> 22，其中 10022 是宿主主机的端口，22是容器的 SSH 服务监听的端口：")]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" run "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-p")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10022")]),s._v(":22 "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-d")]),s._v(" sshd:ubuntu /run.sh\n")])])]),t("p",[s._v("确保宿主主机对外端口10022对外防火墙已经打开")]),s._v(" "),t("p",[s._v("最后，在宿主主机(192.168.1.200)或其他主机上，通过 SSH 访问端口来登录容器：")]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ssh")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".1.200 "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-p")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10022")]),s._v("\n")])])]),t("h3",{attrs:{id:"_6-替换镜像源"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6-替换镜像源"}},[s._v("#")]),s._v(" 6. 替换镜像源")]),s._v(" "),t("p",[s._v("如果官方镜像速度慢的话，可以替换成国内的163、sohu 等镜像的源。以163源为例，在容器内创建/etc/apt/sources.list.d/163.list 文件：")]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("vi")]),s._v(" /etc/apt/sources.list.d/163.list\n")])])]),t("p",[s._v("添加如下内容到文件中:")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("deb http://mirrors.163.com/ubuntu/ bionic main restricted universe multiverse\ndeb http://mirrors.163.com/ubuntu/ bionic-security main restricted universe multiverse\ndeb http://mirrors.163.com/ubuntu/ bionic-updates main restricted universe multiverse\ndeb http://mirrors.163.com/ubuntu/ bionic-proposed main restricted universe multiverse\ndeb http://mirrors.163.com/ubuntu/ bionic-backports main restricted universe multiverse\ndeb-src http://mirrors.163.com/ubuntu/ bionic main restricted universe multiverse\ndeb-src http://mirrors.163.com/ubuntu/ bionic-security main restricted universe multiverse\ndeb-src http://mirrors.163.com/ubuntu/ bionic-updates main restricted universe multiverse\ndeb-src http://mirrors.163.com/ubuntu/ bionic-proposed main restricted universe multiverse\ndeb-src http://mirrors.163.com/ubuntu/ bionic-backports main restricted universe multiverse\n")])])]),t("p",[s._v("之后重新执行 apt-get update 命令就可以了。")]),s._v(" "),t("h2",{attrs:{id:"二、基于-dockerfile-创建"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#二、基于-dockerfile-创建"}},[s._v("#")]),s._v(" 二、基于 Dockerfile 创建")]),s._v(" "),t("h3",{attrs:{id:"_1-创建工作目录"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-创建工作目录"}},[s._v("#")]),s._v(" 1. 创建工作目录")]),s._v(" "),t("p",[s._v("首先，创建一个 sshd_ubuntu 工作目录：")]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" sshd_ubuntu\n")])])]),t("p",[s._v("在工作目录中，创建Dockerfile 和 run.sh 文件")]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" sshd_ubuntu/\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("touch")]),s._v(" Dockerfile run.sh\n")])])]),t("h3",{attrs:{id:"_2-编写-run-sh-脚本和-authorized-keys-文件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-编写-run-sh-脚本和-authorized-keys-文件"}},[s._v("#")]),s._v(" 2. 编写 run.sh 脚本和 authorized_keys 文件")]),s._v(" "),t("p",[s._v("run.sh 的内容和上面一样：")]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token shebang important"}},[s._v("#!/bin/bash")]),s._v("\n/usr/sbin/sshd "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-D")]),s._v("\n")])])]),t("p",[s._v("在宿主主机上生成 SSH 密钥对，并创建 authorized_keys 文件：")]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[s._v("ssh-keygen "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-t")]),s._v(" rsa\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" ~/.ssh/id_rsa.pub "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" authorized_keys\n")])])]),t("h3",{attrs:{id:"_3-编写-dockerfile"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-编写-dockerfile"}},[s._v("#")]),s._v(" 3. 编写 Dockerfile")]),s._v(" "),t("div",{staticClass:"language-docker extra-class"},[t("pre",{pre:!0,attrs:{class:"language-docker"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 设置继承镜像")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" ubuntu:18.04")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 提供一些作者的信息")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("MAINTAINER")]),s._v("  docker_user(user@docker.com)")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 更改 ubuntu 的源为国内 163 的源")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" echo "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"deb http://mirrors.163.com/ubuntu/ bionic main restricted universe multiverse"')]),s._v(" > /etc/apt/sources.list")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" echo "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"deb http://mirrors.163.com/ubuntu/ bionic-security main restricted universe multiverse"')]),s._v(" >> /etc/apt/sources.list")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" echo "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"deb http://mirrors.163.com/ubuntu/ bionic-updates main restricted universe multiverse"')]),s._v(" >> /etc/apt/sources.list")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" echo "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"deb http://mirrors.163.com/ubuntu/ bionic-proposed main restricted universe multiverse"')]),s._v(" >> /etc/apt/sources.list")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" echo "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"deb http://mirrors.163.com/ubuntu/ bionic-backports main restricted universe multiverse"')]),s._v(" >> /etc/apt/sources.list")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" apt-get update")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 安装 ssh 服务")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" apt-get install -y openssh-server")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" mkdir -p /var/run/sshd")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" mkdir -p /root/.ssh")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 取消 pam 限制")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" sed -ri "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/session required pam_loginuid.so/#session required pam_loginuid.so/g'")]),s._v(" /etc/pam.d/sshd")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 复制配置文件到相应位置，并赋予脚本可执行权限")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ADD")]),s._v(" authorized_keys /root/.ssh/authorized_keys")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ADD")]),s._v(" run.sh /run.sh")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" chmod 755 /run.sh")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 开放端口")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("EXPOSE")]),s._v(" 22")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 设置自启动命令")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CMD")]),s._v(" ["),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/run.sh"')]),s._v("]")]),s._v("\n")])])]),t("h4",{attrs:{id:"_4-创建镜像"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-创建镜像"}},[s._v("#")]),s._v(" 4. 创建镜像")]),s._v(" "),t("p",[s._v("在 sshd_ubuntu 目录下，使用 docker build 命令来创建镜像。")]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" sshd_ubuntu\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" build "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-t")]),s._v(" sshd:dockerfile "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v("\n")])])]),t("p",[s._v("当使用 Dockerfile创建自定义镜像时，Docker 会自动删除中间临时创建的层。")]),s._v(" "),t("p",[s._v("命令执行完毕后，如果看见“Successfully built XXX”字样，则说明镜像创建成功。")]),s._v(" "),t("p",[s._v("然后可以使用 docker images 命令查看已存在的镜像。")]),s._v(" "),t("h3",{attrs:{id:"_5-使用镜像-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-使用镜像-2"}},[s._v("#")]),s._v(" 5. 使用镜像")]),s._v(" "),t("p",[s._v("直接启动镜像，映射容器的 22 端口 到本地的 10122 端口：")]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" run "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-d")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-p")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10122")]),s._v(":22 sshd:dockerfile\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v("\n")])])]),t("p",[s._v("在宿主主机(192.168.1.200)或其他主机上，通过 SSH 访问端口来登录容器：")]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ssh")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".1.200 "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-p")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10022")]),s._v("\n")])])]),t("h2",{attrs:{id:"参考文献"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#参考文献"}},[s._v("#")]),s._v(" 参考文献")]),s._v(" "),t("p",[s._v("Docker技术入门与实战(第3版)")])])}),[],!1,null,null,null);t.default=r.exports}}]);