(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{446:function(t,a,s){t.exports=s.p+"assets/img/01.b27b94aa.png"},447:function(t,a,s){t.exports=s.p+"assets/img/02.e7be4331.png"},448:function(t,a,s){t.exports=s.p+"assets/img/03.78c8c6c0.png"},449:function(t,a,s){t.exports=s.p+"assets/img/04.bb46079b.png"},450:function(t,a,s){t.exports=s.p+"assets/img/05.28757e76.png"},451:function(t,a,s){t.exports=s.p+"assets/img/06.fe251fd7.png"},452:function(t,a,s){t.exports=s.p+"assets/img/07.f2c0ef16.png"},453:function(t,a,s){t.exports=s.p+"assets/img/08.944b8d47.png"},557:function(t,a,s){"use strict";s.r(a);var e=s(5),n=Object(e.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安装"}},[t._v("#")]),t._v(" 安装")]),t._v(" "),a("ol",[a("li",[t._v("安装 "),a("a",{attrs:{href:"https://github.com/luggit/react-native-config",target:"_blank",rel:"noopener noreferrer"}},[t._v("react-native-config"),a("OutboundLink")],1),t._v("依赖：")])]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("yarn")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" react-native-config\n")])])]),a("ol",{attrs:{start:"2"}},[a("li",[t._v("添加原生链接")])]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" ios "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" pod "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("\n")])])]),a("h2",{attrs:{id:"使用-env-中的配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用-env-中的配置"}},[t._v("#")]),t._v(" 使用 .env 中的配置")]),t._v(" "),a("p",[t._v("安装完成后，我们就可以在 Obj-C 类中使用 .env 中声明的变量了：")]),t._v(" "),a("div",{staticClass:"language-Objective-C extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('// import header\n#import "ReactNativeConfig.h"\n\n// then read individual keys like:\nNSString *apiUrl = [ReactNativeConfig envFor:@"API_URL"];\n\n// or just fetch the whole config\nNSDictionary *config = [ReactNativeConfig env];\n')])])]),a("p",[t._v("但是如果想要在 Build settings 和 Info.plist 中使用的话，还需要额外的配置。比如 ios 的项目名称就是在info.plist配置的。")]),t._v(" "),a("p",[t._v("下面就来配置一下，让 info.plist使用 .env 里面的值。")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("进入 项目的 ios 目录，双击 himalayan.xcworkspace，xcode就会打开项目。")])]),t._v(" "),a("li",[a("p",[t._v("右键项目名称，点击 New File... 菜单：")])])]),t._v(" "),a("p",[a("img",{attrs:{src:s(446),alt:"image from dependency"}})]),t._v(" "),a("ol",{attrs:{start:"3"}},[a("li",[t._v("创建一个配置文件：")])]),t._v(" "),a("p",[a("img",{attrs:{src:s(447),alt:"image from dependency"}})]),t._v(" "),a("p",[t._v("名称使用默认的就可以了，在target 里面选择 himalayan：")]),t._v(" "),a("p",[a("img",{attrs:{src:s(448),alt:"image from dependency"}})]),t._v(" "),a("ol",{attrs:{start:"4"}},[a("li",[t._v("编辑Config.xcconfig:")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('#include? "tmp.xcconfig"\n')])])]),a("p",[a("img",{attrs:{src:s(449),alt:"image from dependency"}})]),t._v(" "),a("p",[t._v("因为 tmp.xcconfig 是动态生成的，所以不用提交到 git")]),t._v(" "),a("div",{staticClass:"language-.gitignore extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("# react-native-config codegen\nios/tmp.xcconfig\n")])])]),a("ol",{attrs:{start:"5"}},[a("li",[t._v("应用配置文件")])]),t._v(" "),a("p",[t._v("想要使用配置文件，我们还需要在 Debug 和 Release 中做配置：")]),t._v(" "),a("p",[a("img",{attrs:{src:s(450),alt:"image from dependency"}})]),t._v(" "),a("p",[t._v("点击targets的 himalayan,打开  build phase")]),t._v(" "),a("p",[t._v("点击加号，创建一个脚本：")]),t._v(" "),a("p",[a("img",{attrs:{src:s(451),alt:"image from dependency"}})]),t._v(" "),a("p",[t._v("在脚本里面添加代码：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${SRCROOT}")]),t._v('/../node_modules/react-native-config/ios/ReactNativeConfig/BuildXCConfig.rb"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${SRCROOT}")]),t._v('/.."')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${SRCROOT}")]),t._v('/tmp.xcconfig"')]),t._v("\n")])])]),a("p",[a("img",{attrs:{src:s(452),alt:"image from dependency"}})]),t._v(" "),a("ol",{attrs:{start:"6"}},[a("li",[t._v("最后，我们就可以在 info.plist 使用 .env 中的配置了")])]),t._v(" "),a("p",[a("img",{attrs:{src:s(453),alt:"image from dependency"}})])])}),[],!1,null,null,null);a.default=n.exports}}]);